@startuml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Container.puml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Component.puml

title Component Diagram for Wichat Backend (C4 Level 3)

AddElementTag("Person", $bgColor="#darkgreen", $fontColor="#white")
AddElementTag("Internal system", $bgColor="#darkseagreen", $fontColor="#003300")
AddElementTag("Database", $bgColor="#darkgreen", $fontColor="#white")
AddElementTag("Component", $bgColor="#darkolivegreen", $fontColor="#white")
AddElementTag("Background Task", $bgColor="#556B2F", $fontColor="#ffffff")
AddElementTag("External system", $bgColor="#gray", $fontColor="#white")

Person(player, "Player", "Uses the system via a web browser")

System_Boundary(wichat, "Wichat System") {

  Container(webapp, "Wichat WebApp", "React", "Frontend SPA for gameplay", $tags="Internal system")
  Container(gateway, "API Gateway", "Node.js", "Single entry point for the frontend", $tags="Internal system")

  Component(gameservice, "GameService", "Node.js", "Handles gameplay, answers and progress", $tags="Component")

  Container_Boundary(questionservice, "QuestionService") {
    Component(questionstorage, "QuestionStorage", "Node.js", "Exposes API endpoints to retrieve questions", $tags="Component")
    Component(questiongenerator, "QuestionGenerator", "Node.js", "Background job that periodically fetches and updates questions from WikiData", $tags="Background Task")
  }

  Component(llmservice, "LLMService", "Node.js", "Fetches hints from LLM API", $tags="Component")
  Component(authservice, "AuthService", "Node.js", "Authenticates users, manages sessions", $tags="Component")
  Component(userservice, "UserService", "Node.js", "Manages user registration and profiles", $tags="Component")

  ContainerDb(gamedb, "Game Collection", "MongoDB", "Stores game sessions and progress", $tags="Database")
  ContainerDb(questiondb, "Question Collection", "MongoDB", "Stores questions from Wikidata", $tags="Database")
  ContainerDb(userdb, "User Collection", "MongoDB", "Stores user profiles, auth info and leaderboard", $tags="Database")
}

System_Ext(wikidata, "WikiData API", "External service with structured knowledge", $tags="External system")
System_Ext(llm_api, "LLM API (Empathy)", "External service for natural language hints", $tags="External system")

' Interactions
Rel(player, webapp, "Uses", "HTTPS")
Rel(webapp, gateway, "Sends REST requests", "HTTPS")

Rel(gateway, userservice, "Manages user registration", "JSON")
Rel(gateway, authservice, "Authenticates users", "JSON")
Rel(gateway, gameservice, "Handles gameplay logic", "JSON")
Rel(gateway, questionstorage, "Requests questions", "JSON")
Rel(gateway, llmservice, "Requests hints", "JSON")

Rel(gameservice, gamedb, "Reads/Writes game data", "MongoDB")
Rel(questionstorage, questiondb, "Reads/Writes questions", "MongoDB")
Rel(userservice, userdb, "Stores user data", "MongoDB")
Rel(authservice, userdb, "Stores login/session data", "MongoDB")
Rel(llmservice, llm_api, "Sends prompt / receives hint", "HTTPS")
Rel(questiongenerator, wikidata, "Periodically fetches data", "HTTPS")
Rel(questiongenerator, questiondb, "Writes new questions", "MongoDB")

@enduml

